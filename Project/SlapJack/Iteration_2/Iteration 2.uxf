<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>1000</x><y>149</y><w>610</w><h>240</h></coordinates><panel_attributes>GameController
--
- inQ: InBoundQueue
- remote: RemoteTableGateway
- abstractFactory: GameFactoryFactory
+ deferred: Stack&lt;Event&gt;
+ game: PregameSetup
--
+ GameController(inQ : InBoundQueue, gateway : RemoteTableGateway, gFFactory : GameFactoryFactory)
+ run(): void
+ apply(e: ConnectEvent, game: PregameSetup): void
+ apply(e : SelectGame, game: PregameSetup): void
+ apply(e : InvalidGameSelection, game: PregameSetup): void
+ apply(e : NewPartyEvent, game: PregameSetup): void
+ apply(e : EndPlay, game2: PregameSetup): void


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>570</x><y>239</y><w>350</w><h>170</h></coordinates><panel_attributes>GameFactoryFactory
--
+ PU52MP: String
+ PU52SP: String
*+ SlapJack: String*
*+ gameIds: String[]*
+ supported: List&lt;String&gt;
--
*+ getGameFactory(selector: String): GameFactory*
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>910</x><y>289</y><w>100</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>10;20;80;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>250</x><y>269</y><w>230</w><h>100</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
GameFactory
--
--
+ createRules() : Rules
+ createTable() : Table

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>250</x><y>419</y><w>250</w><h>100</h></coordinates><panel_attributes>P52MPGameFactory
--
+ createRules() : Rules
+ createTable() : Table</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>430</x><y>809</y><w>190</w><h>130</h></coordinates><panel_attributes>DealCommand
--
- table: Table
--
+ apply(table: Table)
+ apply(views: ViewFacade)

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>470</x><y>299</y><w>110</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;gets&gt;&gt;</panel_attributes><additional_attributes>10;20;90;20</additional_attributes></element><element><id>Relation</id><coordinates><x>360</x><y>359</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;.
</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>370</x><y>509</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red
</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1110</x><y>839</y><w>370</w><h>100</h></coordinates><panel_attributes>PlayController
--
- InBoundQueue: inQ
- Rules: rules
--
+ PlayController(InBoundQueue,Rules)
+ play(Table, Player, ViewFacade): Event

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1510</x><y>379</y><w>190</w><h>170</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;creates&gt;&gt;</panel_attributes><additional_attributes>170;150;170;90;10;90;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1940</x><y>659</y><w>340</w><h>190</h></coordinates><panel_attributes>RulesDispatchBase
--
--
+ apply(e:CardEvent, table:Table,  player:Player): Move
+ apply(e:DealEvent, table:Table,  player:Player): Move
+ apply(e : EndPlay, table:Table,  player:Player): Move
+ apply(e: InitGameEvent, table:Table,  player:Player): Move
+ apply(e:SelectGame, table:Table,  player:Player): Move
+ apply(e:GameRestartEvent, table:Table,  player:Player): Move
+ apply(e:NewPartyEvent, table:Table,  player:Player): Move
+ apply(e: SetQuorumEvent, table:Table,  player:Player): Move
+ apply(e:ConnectEvent, table:Table,  player:Player): Move



</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1520</x><y>709</y><w>380</w><h>220</h></coordinates><panel_attributes>P52Rules
--
+RANDOM_PILE :  String 
+DISCARD_PILE :  String  
--
+ P52Rules()
+ apply(e: CardEvent, table:Table,  player:Player): Move
+ eval(nextE :Event, table:Table, player:Player) : Move
+ apply(e:DealEvent, table:Table,  player:Player): Move
+ apply(e: InitGameEvent, table:Table,  player:Player): Move
+ apply(e:NewPartyEvent, table:Table,  player:Player): Move
+ apply(e: SetQuorumEvent, table:Table,  player:Player): Move
+ apply(e:ConnectEvent, table:Table,  player:Player): Move
- registerEvents()</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2100</x><y>539</y><w>30</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;120</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1510</x><y>959</y><w>360</w><h>230</h></coordinates><panel_attributes>*SlapJackRules*
--
*+ PLAYER1_PILE: String*
*+ PLAYER2_PILE: String*
*+ CENTER_PILE: String*
fg=red
--
*+ SlapJackRules()*
+ eval(nextE :Event, table:Table, player:Player) : Move
*+ apply(e: CardEvent, table:Table,  player:Player): Move*
+ apply(e:DealEvent, table:Table,  player:Player): Move
*+ apply(e: InitGameEvent, table:Table,  player:Player): Move*
+ apply(e:NewPartyEvent, table:Table,  player:Player): Move
+ apply(e: SetQuorumEvent, table:Table,  player:Player): Move
+ apply(e:ConnectEvent, table:Table,  player:Player): Move
- registerEvents()

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1680</x><y>919</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>Relation</id><coordinates><x>1290</x><y>379</y><w>80</w><h>190</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;creates&gt;&gt;</panel_attributes><additional_attributes>10;170;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1290</x><y>699</y><w>80</w><h>160</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;creates&gt;&gt;</panel_attributes><additional_attributes>10;140;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1140</x><y>549</y><w>310</w><h>160</h></coordinates><panel_attributes>MatchController
--
+ PU52MP: String
+ PU52SP: String
+ gameIds: String[]
+ supported: List&lt;String&gt;
--
+ getGameFactory(selector: String): GameFactory
+ start(): void

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>650</x><y>809</y><w>200</w><h>140</h></coordinates><panel_attributes>P52Move
--
- c : card
- p :Player
- fromPile : Pile
- toPile : Pile 
--
+ apply(table: Table)
+ apply(views: ViewFacade)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>860</x><y>629</y><w>300</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;</panel_attributes><additional_attributes>10;20;280;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>620</x><y>619</y><w>250</w><h>100</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
Move
--
--
+ apply(table: Table)
+ apply(views: ViewFacade)
+ isMatchEnd(): boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>730</x><y>709</y><w>30</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>270</x><y>569</y><w>220</w><h>130</h></coordinates><panel_attributes>*SlapJackGameFactory*
--
*+ createRules() : Rules*
*+ createTable() : Table*
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1440</x><y>539</y><w>110</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
uses
m1=1
</panel_attributes><additional_attributes>90;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>900</x><y>809</y><w>190</w><h>130</h></coordinates><panel_attributes>EndPlayMove
--
--
+ apply(table: Table)
+ apply(views: ViewFacade)
+ isMatchEnd() : boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>860</x><y>689</y><w>370</w><h>170</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;</panel_attributes><additional_attributes>10;10;230;10;230;70;350;70;350;150</additional_attributes></element><element><id>Relation</id><coordinates><x>850</x><y>709</y><w>170</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;.
</panel_attributes><additional_attributes>10;10;10;70;150;70;150;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1530</x><y>529</y><w>300</w><h>90</h></coordinates><panel_attributes>&lt;&lt;inteface&gt;&gt;
Rules
--
--
+ eval(nextE: Event, table: Table, player: Player): Move

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1750</x><y>539</y><w>280</w><h>190</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>260;10;260;100;10;100;10;170</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1890</x><y>359</y><w>340</w><h>190</h></coordinates><panel_attributes>&lt;&lt;inteface&gt;&gt;
RulesDispatch
--
--
+ apply(e:CardEvent, table:Table,  player:Player): Move
+ apply(e:DealEvent, table:Table,  player:Player): Move
+ apply(e : EndPlay, table:Table,  player:Player): Move
+ apply(e: InitGameEvent, table:Table,  player:Player): Move
+ apply(e:SelectGame, table:Table,  player:Player): Move
+ apply(e:GameRestartEvent, table:Table,  player:Player): Move
+ apply(e:NewPartyEvent, table:Table,  player:Player): Move
+ apply(e: SetQuorumEvent, table:Table,  player:Player): Move
+ apply(e:ConnectEvent, table:Table,  player:Player): Move



</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1810</x><y>659</y><w>350</w><h>240</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>330;190;330;220;110;220;110;10;10;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>1680</x><y>609</y><w>30</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1670</x><y>189</y><w>360</w><h>100</h></coordinates><panel_attributes>The class with red color means there is something we need to 
modify inside the class. The attributes and functions that are bold, 
is the one we are modifying. If the class name is bold, means that 
we are adding a new class that was not in the original code.
bg=cyan
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>850</x><y>1169</y><w>680</w><h>50</h></coordinates><panel_attributes>lt=&lt;..
&lt;&lt;create&gt;&gt;
fg=red
</panel_attributes><additional_attributes>10;20;660;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>660</x><y>1049</y><w>200</w><h>160</h></coordinates><panel_attributes>*SlapJackMove*
--
- c : card
- p :Player
- fromPile : Pile
- toPile : Pile 
--
*+ SlapJackMove()*
*+ apply(table: Table)*
*+ apply(table: Table, flag: int)*
*+ apply(views: ViewFacade)*

fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>750</x><y>939</y><w>30</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red
</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>510</x><y>1179</y><w>1210</w><h>80</h></coordinates><panel_attributes>lt=&lt;..
&lt;&lt;create&gt;&gt;
fg=red
</panel_attributes><additional_attributes>10;20;10;50;1190;50;1190;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>809</y><w>230</w><h>130</h></coordinates><panel_attributes>P52InitCmd
--
- table: Table
- players : Map&lt;Integer,Players&gt;
- title: String
--
*+ apply(table: Table)*
*+ apply(views: ViewFacade)*</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>280</x><y>1179</y><w>1550</w><h>90</h></coordinates><panel_attributes>lt=&lt;..
&lt;&lt;create&gt;&gt;
fg=red
</panel_attributes><additional_attributes>10;20;10;70;1530;60;1530;10</additional_attributes></element><element><id>Relation</id><coordinates><x>530</x><y>699</y><w>110</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>90;10;10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>310</x><y>659</y><w>330</w><h>170</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>310;10;220;10;220;70;10;70;10;150</additional_attributes></element><element><id>UMLClass</id><coordinates><x>430</x><y>1069</y><w>190</w><h>130</h></coordinates><panel_attributes>*SlapjackDealCommand*
--
- table: Table
--
*+ apply(table: Table)*
*+ apply(views: ViewFacade)*

fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>520</x><y>929</y><w>30</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red
</panel_attributes><additional_attributes>10;10;10;140</additional_attributes></element><element><id>Relation</id><coordinates><x>1090</x><y>1079</y><w>440</w><h>50</h></coordinates><panel_attributes>lt=&lt;..
&lt;&lt;create&gt;&gt;
fg=red
</panel_attributes><additional_attributes>10;20;420;20</additional_attributes></element><element><id>UMLNote</id><coordinates><x>390</x><y>1269</y><w>370</w><h>70</h></coordinates><panel_attributes>Over here we only include the class that need be changed. There
are more class who implement interface Move but they are not 
changed
bg=cyan

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>1069</y><w>230</w><h>130</h></coordinates><panel_attributes>SlapjackInitCmd
--
- table: Table
- players : Map&lt;Integer,Players&gt;
- title: String
--
*+ apply(table: Table)*
*+ apply(views: ViewFacade)*
fg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>290</x><y>929</y><w>30</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red
</panel_attributes><additional_attributes>10;10;10;140</additional_attributes></element><element><id>UMLClass</id><coordinates><x>910</x><y>1039</y><w>190</w><h>130</h></coordinates><panel_attributes>*SlapjackEndPlayMove*
--
--
*+ apply(table: Table)*
*+ apply(views: ViewFacade)*
+ isMatchEnd() : boolean
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>990</x><y>929</y><w>30</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red
</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element></diagram>