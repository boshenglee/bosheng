<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>890</x><y>150</y><w>680</w><h>240</h></coordinates><panel_attributes>GameController
--
- inQ: InBoundQueue
- remote: RemoteTableGateway
- abstractFactory: GameFactoryFactory
+ deferred: Stack&lt;Event&gt;
+ game: PregameSetup
--
+ GameController(inQ : InBoundQueue, gateway : RemoteTableGateway, gFFactory : GameFactoryFactory)
+ run(): void
+ apply(e: ConnectEvent, game: PregameSetup): void
+ apply(e : SelectGame, game: PregameSetup): void
+ apply(e : InvalidGameSelection, game: PregameSetup): void
+ apply(e : NewPartyEvent, game: PregameSetup): void
+ apply(e : EndPlay, game2: PregameSetup): void


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>460</x><y>240</y><w>350</w><h>170</h></coordinates><panel_attributes>GameFactoryFactory
--
+ PU52MP: String
+ PU52SP: String
*+ SlapJack: String*
*+ gameIds: String[]*
+ supported: List&lt;String&gt;
--
*+ getGameFactory(selector: String): GameFactory*
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>800</x><y>290</y><w>100</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>10;20;80;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>140</x><y>270</y><w>230</w><h>100</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
GameFactory
--
--
+ createRules() : Rules
+ createTable() : Table

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>140</x><y>420</y><w>250</w><h>100</h></coordinates><panel_attributes>P52MPGameFactory
--
+ createRules() : Rules
+ createTable() : Table</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>360</x><y>300</y><w>110</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;gets&gt;&gt;</panel_attributes><additional_attributes>10;20;90;20</additional_attributes></element><element><id>Relation</id><coordinates><x>250</x><y>360</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;.
</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>260</x><y>510</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red
</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1000</x><y>830</y><w>370</w><h>100</h></coordinates><panel_attributes>PlayController
--
- InBoundQueue: inQ
- Rules: rules
--
+ PlayController(InBoundQueue,Rules)
+ play(Table, Player, ViewFacade): Event

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1400</x><y>380</y><w>190</w><h>170</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;creates&gt;&gt;</panel_attributes><additional_attributes>170;150;170;90;10;90;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1860</x><y>540</y><w>410</w><h>190</h></coordinates><panel_attributes>RulesDispatchBase
--
--
+ apply(e:CardEvent, table:Table,  player:Player): Move
+ apply(e:DealEvent, table:Table,  player:Player): Move
+ apply(e : EndPlay, table:Table,  player:Player): Move
+ apply(e: InitGameEvent, table:Table,  player:Player): Move
+ apply(e:SelectGame, table:Table,  player:Player): Move
+ apply(e:GameRestartEvent, table:Table,  player:Player): Move
+ apply(e:NewPartyEvent, table:Table,  player:Player): Move
+ apply(e: SetQuorumEvent, table:Table,  player:Player): Move
+ apply(e:ConnectEvent, table:Table,  player:Player): Move




</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1620</x><y>780</y><w>380</w><h>220</h></coordinates><panel_attributes>P52Rules
--
+RANDOM_PILE :  String 
+DISCARD_PILE :  String  
--
+ P52Rules()
+ apply(e: CardEvent, table:Table,  player:Player): Move
+ eval(nextE :Event, table:Table, player:Player) : Move
+ apply(e:DealEvent, table:Table,  player:Player): Move
+ apply(e: InitGameEvent, table:Table,  player:Player): Move
+ apply(e:NewPartyEvent, table:Table,  player:Player): Move
+ apply(e: SetQuorumEvent, table:Table,  player:Player): Move
+ apply(e:ConnectEvent, table:Table,  player:Player): Move
- registerEvents()</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1940</x><y>500</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1300</x><y>1040</y><w>510</w><h>260</h></coordinates><panel_attributes>*SJRules*
--
*+ PLAYER1_PILE: String*
*+ PLAYER2_PILE: String*
*+ CENTER_PILE: String*
fg=red
--
*+ SJRules()*
*+ apply(e: CardEvent, table:Table,  player:Player): Move*
*- clickOnCenterPile(table:Table,  player:Player, fromPile: Pile, e: CardEvent, opponent: int): Move*
*- clickOnPlayerPile(table:Table,  player:Player, toPile: Pile, e: CardEvent, opponent: int): Move*
*+ apply(e:DealEvent, table:Table,  player:Player): Move*
*+ apply(e: InitGameEvent, table:Table,  player:Player): Move*
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1180</x><y>380</y><w>80</w><h>190</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;creates&gt;&gt;</panel_attributes><additional_attributes>10;170;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1180</x><y>700</y><w>80</w><h>150</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;creates&gt;&gt;</panel_attributes><additional_attributes>10;130;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1030</x><y>550</y><w>320</w><h>160</h></coordinates><panel_attributes>MatchController
--
+ PU52MP: String
+ PU52SP: String
+ gameIds: String[]
+ supported: List&lt;String&gt;
--
+ getGameFactory(selector: String): GameFactory
+ start(): void

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>750</x><y>630</y><w>300</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;</panel_attributes><additional_attributes>10;20;280;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>510</x><y>620</y><w>250</w><h>100</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
Move
--
--
+ apply(table: Table)
+ apply(views: ViewFacade)
+ isMatchEnd(): boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>630</x><y>710</y><w>30</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>160</x><y>570</y><w>220</w><h>130</h></coordinates><panel_attributes>*SJGameFactory*
--
*+ createRules() : Rules*
*+ createTable() : Table*
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1340</x><y>540</y><w>100</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
uses
m1=1
</panel_attributes><additional_attributes>80;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>750</x><y>690</y><w>370</w><h>160</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;</panel_attributes><additional_attributes>10;10;230;10;230;70;350;70;350;140</additional_attributes></element><element><id>Relation</id><coordinates><x>740</x><y>710</y><w>170</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>10;10;10;70;150;70;150;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1420</x><y>530</y><w>350</w><h>90</h></coordinates><panel_attributes>&lt;&lt;inteface&gt;&gt;
Rules
--
--
+ eval(nextE: Event, table: Table, player: Player): Move

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1650</x><y>310</y><w>410</w><h>200</h></coordinates><panel_attributes>&lt;&lt;inteface&gt;&gt;
RulesDispatch
--
--
+ apply(e:CardEvent, table:Table,  player:Player): Move
+ apply(e:DealEvent, table:Table,  player:Player): Move
+ apply(e : EndPlay, table:Table,  player:Player): Move
+ apply(e: InitGameEvent, table:Table,  player:Player): Move
+ apply(e:SelectGame, table:Table,  player:Player): Move
+ apply(e:GameRestartEvent, table:Table,  player:Player): Move
+ apply(e:NewPartyEvent, table:Table,  player:Player): Move
+ apply(e: SetQuorumEvent, table:Table,  player:Player): Move
+ apply(e:ConnectEvent, table:Table,  player:Player): Move



</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>600</x><y>460</y><w>380</w><h>100</h></coordinates><panel_attributes>The class with red color means there we either modify something
 in the class or we add the new class. The attributes and functions 
that are bold, is the one we are modifying. If the class name is bold, 
means that we are adding a new class that was not in the original 
code.
bg=cyan
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>730</x><y>980</y><w>590</w><h>180</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;
fg=red
</panel_attributes><additional_attributes>10;10;50;10;50;160;570;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>540</x><y>810</y><w>200</w><h>200</h></coordinates><panel_attributes>*SJMove*
--
*- c : card*
*- p :Player*
*- fromPile : Pile*
*- toPile : Pile*
*- fromPileString: String*
*- toPileString: String*
--
*+ SJMove()*
*+ apply(table: Table)*
*+ apply(table: Table)*
*+ apply(views: ViewFacade)*

fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>420</x><y>930</y><w>900</w><h>320</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;
fg=red
</panel_attributes><additional_attributes>10;10;10;300;880;300</additional_attributes></element><element><id>Relation</id><coordinates><x>190</x><y>930</y><w>1130</w><h>360</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;
fg=red
</panel_attributes><additional_attributes>10;10;10;340;1110;340</additional_attributes></element><element><id>Relation</id><coordinates><x>430</x><y>700</y><w>100</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>80;10;10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>200</x><y>660</y><w>330</w><h>170</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>310;10;220;10;220;70;10;70;10;150</additional_attributes></element><element><id>UMLClass</id><coordinates><x>340</x><y>810</y><w>190</w><h>130</h></coordinates><panel_attributes>*SJDealCommand*
--
*- table: Table*

--
*+SJDealCommand()*
*+ apply(table: Table)*
*+ apply(views: ViewFacade)*
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>900</x><y>930</y><w>420</w><h>150</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;
fg=red
</panel_attributes><additional_attributes>10;10;10;130;400;130</additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>810</y><w>230</w><h>130</h></coordinates><panel_attributes>*SJInitCmd*
--
*- table: Table*
*- players : Map&lt;Integer,Players&gt;*
*- title: String*
--
*+ apply(table: Table)*
*+ apply(views: ViewFacade)*
*- shuffle(pile: Pile)*
fg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>770</x><y>810</y><w>190</w><h>130</h></coordinates><panel_attributes>*SJEndPlayMove*
--
*- p: Player*
*- table: Table*
--
*+SJEndPlayMove()*
*+ apply(table: Table)*
*+ apply(views: ViewFacade)*
+ isMatchEnd() : boolean
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>530</x><y>1040</y><w>200</w><h>160</h></coordinates><panel_attributes>*SJSlapJackMove*
--
*- cardList : ArrayList&lt;Card&gt;*
--
*+ SJSlapJackMove()*
*+ apply(table: Table)*
*+ apply(table: Table)*
*+ apply(views: ViewFacade)*

fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>530</x><y>1300</y><w>200</w><h>70</h></coordinates><panel_attributes>*SJWrongMove*
--
--
*+SJWrongMove()*

fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1690</x><y>610</y><w>30</w><h>190</h></coordinates><panel_attributes>lt=&lt;&lt;.
</panel_attributes><additional_attributes>10;10;10;170</additional_attributes></element><element><id>Relation</id><coordinates><x>1980</x><y>720</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>1820</x><y>500</y><w>30</w><h>300</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;280</additional_attributes></element><element><id>Relation</id><coordinates><x>620</x><y>1000</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red
</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>Relation</id><coordinates><x>590</x><y>1190</y><w>30</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red
</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>1170</y><w>600</w><h>50</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;
fg=red
</panel_attributes><additional_attributes>10;20;580;20</additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>1290</y><w>950</w><h>90</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;
fg=red
</panel_attributes><additional_attributes>10;60;930;60;930;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1710</x><y>990</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element></diagram>